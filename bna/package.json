{
    "engines": {
        "composer": "^0.19.0"
    },
    "name": "iot-network",
    "version": "0.0.3",
    "description": "iot blockchain data event",
    "networkImage": "https://hyperledger.github.io/composer-sample-networks/packages/vehicle-manufacture-network/networkimage.svg",
    "networkImageanimated": "https://hyperledger.github.io/composer-sample-networks/packages/vehicle-manufacture-network/networkimageanimated.svg",
    "scripts": {
        "prepublish": "mkdirp ./dist && composer archive create --sourceType dir --sourceName . -a ./dist/iot-network.bna",
        "pretest": "npm run lint",
        "lint": "eslint .",
        "postlint": "npm run licchk",
        "licchk": "license-check-and-add",
        "postlicchk": "npm run doc",
        "doc": "jsdoc --pedantic --recurse -c jsdoc.json",
        "test": "mocha -t 0 --recursive",
        "deploy": "./scripts/deploy.sh"
    },
    
    "keywords": ["iot", "trading", "composer", "composer-network"],
    "author": "Hyperledger Composer",
    "license": "Apache-2.0",
    "devDependencies": {
        "chai": "^3.5.0",
        "composer-admin": "^0.19.0-0",
        "composer-cli": "^0.19.0-0",
        "composer-client": "^0.19.0-0",
        "composer-common": "^0.19.0-0",
        "composer-connector-embedded": "^0.19.0-0",
        "eslint": "^3.6.1",
        "istanbul": "^0.4.5",
        "jsdoc": "^3.5.5",
        "license-check-and-add": "~2.3.0",
        "mkdirp": "^0.5.1",
        "mocha": "^3.2.0",
        "moment": "^2.17.1"
    },
    "license-check-and-add-config": {
        "folder": ".",
        "license": "LICENSE.txt",
        "exact_paths_method": "EXCLUDE",
        "exact_paths": ["composer-logs", "dist", "node_modules", "out", ".git"],
        "file_type_method": "EXCLUDE",
        "file_types": [".yml"],
        "insert_license": false,
        "license_formats": {
            "js|cto|acl": {
                "prepend": "/*",
                "append": " */",
                "eachLine": {
                    "prepend": " * "
                }
            }
        }
    }
}